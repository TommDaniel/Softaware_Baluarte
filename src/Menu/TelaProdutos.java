/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Menu;
import Logic.Produto;
import Logic.Produtos;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import tabledark.ColorCellRenderer;
import java.io.ObjectInputStream;
import java.util.ArrayList;
/**
 *
 * @author daniel
 */
public class TelaProdutos extends javax.swing.JInternalFrame {
    private static TelaProdutos telaProdutos;
    private DefaultTableModel modelo;
    private boolean needSave = false;
    public static TelaProdutos getInstancia(){
        if(telaProdutos == null || telaProdutos.isClosed() || !telaProdutos.isDisplayable()){
            telaProdutos = new TelaProdutos();
            telaProdutos.setLocation(0,-30);
        } 
        return telaProdutos;  
    }
    
    public void atualizaTabela(Object[] produto){
        DefaultTableModel dtmProdutos = (DefaultTableModel) tableDark1.getModel();
        dtmProdutos.addRow(produto);
    }
    public void editaTabela(Object[] produto, int idProduto) {
        DefaultTableModel dtmProdutos = (DefaultTableModel) tableDark1.getModel();
        int linha = encontrarIndiceDaLinhaPeloId(dtmProdutos, idProduto);

        if (linha != -1) {
            for (int coluna = 0; coluna < produto.length; coluna++) {
                dtmProdutos.setValueAt(produto[coluna], linha, coluna);
            }
        } else {
            System.out.println("Produto com ID " + idProduto + " não encontrado.");
        }
    }
    
    public int encontrarIndiceDaLinhaPeloId(DefaultTableModel modelo, int idProduto) {
        for (int i = 0; i < modelo.getRowCount(); i++) {
            if (modelo.getValueAt(i, 0) instanceof Integer && (Integer) modelo.getValueAt(i, 0) == idProduto) {
                return i; // Retorna o índice da linha cujo ID do produto corresponde ao fornecido
            }
        }
        return -1; // Retorna -1 se não encontrar uma linha correspondente
    }
    
    /**
     * Creates new form TelaProduto
     */
    public TelaProdutos() {
        initComponents();
        tableDark1.fixTable(jScrollPane1);
        modelo = (DefaultTableModel) tableDark1.getModel();
        tableDark1.getColumnModel().getColumn(5).setCellRenderer(new ColorCellRenderer());
        tableDark1.setRowSorter(new TableRowSorter(modelo));
        importarDeArquivo("save/dadosTabelaProdutos.ser");
    }

    public void importarDeArquivo(String pathToFile) {
        File file = new File(pathToFile);

        // Verifica se o arquivo existe antes de tentar lê-lo
        if (!file.exists()) {
            return;
        }
        
        try (FileInputStream fileIn = new FileInputStream(pathToFile); ObjectInputStream objectIn = new ObjectInputStream(fileIn)) {
            ArrayList<Produto> nprodutos = (ArrayList<Produto>) objectIn.readObject();
            Produtos.setProdutos(nprodutos);
            if (!nprodutos.isEmpty()) {
                Produtos.setCount(nprodutos.get(nprodutos.size() - 1).getId() + 1); // Supondo que você queria definir o contador para o próximo ID disponível
            }
            for(Produto produto : Produtos.getProdutos()){
                Object[] obj = {produto.getId(),produto.getCategoria(),produto.getDescricao(),produto.getQuantidade(),produto.getPreco(),produto.getCor()};
                atualizaTabela(obj);
            }
        } catch (IOException | ClassNotFoundException e) {
            e.printStackTrace();
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jPanel2 = new javax.swing.JPanel();
        back = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableDark1 = new tabledark.TableDark();
        jPanel10 = new javax.swing.JPanel();
        jButton10 = new javax.swing.JButton();

        jMenuItem1.setText("Excluir");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem1);

        setBackground(new java.awt.Color(51, 51, 51));
        setBorder(null);

        jPanel2.setBackground(java.awt.Color.lightGray);

        back.setBackground(java.awt.Color.lightGray);
        back.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Menu/right-arrow.png"))); // NOI18N
        back.setToolTipText("");
        back.setBorder(null);
        back.setFocusPainted(false);
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(0, 0, 0));
        jLabel1.setFont(new java.awt.Font("Impact", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("PRODUTOS");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 504, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(51, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(back, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));

        jButton2.setBackground(new java.awt.Color(51, 51, 51));
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Adicionar Produto");
        jButton2.setFocusPainted(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 73, Short.MAX_VALUE)
                .addContainerGap())
        );

        tableDark1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Catergoria", "Descrição", "Quantidade", "Preço", "Cor"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableDark1.setEditingColumn(0);
        tableDark1.setEditingRow(0);
        tableDark1.getTableHeader().setResizingAllowed(false);
        tableDark1.getTableHeader().setReorderingAllowed(false);
        tableDark1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tableDark1MousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tableDark1);
        if (tableDark1.getColumnModel().getColumnCount() > 0) {
            tableDark1.getColumnModel().getColumn(0).setResizable(false);
            tableDark1.getColumnModel().getColumn(0).setPreferredWidth(5);
            tableDark1.getColumnModel().getColumn(1).setPreferredWidth(100);
            tableDark1.getColumnModel().getColumn(2).setPreferredWidth(100);
            tableDark1.getColumnModel().getColumn(3).setPreferredWidth(30);
            tableDark1.getColumnModel().getColumn(4).setPreferredWidth(30);
            tableDark1.getColumnModel().getColumn(5).setPreferredWidth(20);
        }

        jPanel10.setBackground(new java.awt.Color(51, 51, 51));

        jButton10.setBackground(new java.awt.Color(51, 51, 51));
        jButton10.setForeground(new java.awt.Color(255, 255, 255));
        jButton10.setText("Editar Produto");
        jButton10.setFocusPainted(false);
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 337, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        // salvar e sair
        if(needSave == true){
            Produtos.SalvarProdutos();
            needSave = false;
        }
        telaProdutos.dispose();
    }//GEN-LAST:event_backActionPerformed
    
    


    
    

    private void tableDark1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableDark1MousePressed
        // TODO add your handling code here:
        if (SwingUtilities.isRightMouseButton(evt)) {
            int row = tableDark1.rowAtPoint(evt.getPoint());
            tableDark1.setRowSelectionInterval(row, row);
            jPopupMenu1.show(evt.getComponent(), evt.getX(), evt.getY());
            
        }
    }//GEN-LAST:event_tableDark1MousePressed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        int row = tableDark1.getSelectedRow();
        if (row >= 0) {
            int cellValue =(int) tableDark1.getValueAt(row, 0);
            Produtos.removeProduto(cellValue);
            modelo.removeRow(row);
            needSave = true;
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        TelaPrincipal.getInstance().abrirTela2(TelaADD.getInstancia());
        needSave = true;
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        TelaPrincipal.getInstance().abrirTela2(TelaEdit.getInstancia());
        needSave = true;
    }//GEN-LAST:event_jButton10ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private tabledark.TableDark tableDark1;
    // End of variables declaration//GEN-END:variables

}